UniCC
UniCC 1.0
September 2011

= NAME =
unicc - The universal LALR(1) Parser Generator

= SYNOPSIS =
unicc [OPTION]... FILE

= DESCRIPTION =
UniCC, standing as an acronym for Universal Compiler-Compiler, is a powerful
LALR(1) Parser Generator and Development System for computer professionals.
Its design-goal is to serve as an all-round design and build tool for any
parsing-related issue, including production-quality compiler construction and
the implementation of domains specific languages.

UniCC unions an integrated generator for lexical analyzers and a powerful
LALR(1) parser generator into one software solution.
The programming interface is a rich, extendable and innovative EBNF-based
grammar definition language, which gives any compiler-developer's task much
more comfort and simplicity in implementing parsers than ever before. It comes
with useful features for both grammar prototyping and design, parser
optimization, semantic augmentation and parser programming. Lexical symbols can
be directly defined within productions, right-hand side items can be referenced
by meaningful names within semantic actions, instead of only their offsets.
Features like virtual- and embedded-productions finally help to rapidly build-up
iterative and optional grammatical structures.

Standard features like automatic conflict resolution, terminal and production
precedence association, state compression as well as parser trace and behavior
modification trough semantic actions round up the whole system.

UniCC is technically a target language independent parser generator, which
means that it is not bound to a special programming language. Currently, only
support of the C programming language is given due the UniCC Standard C Parser
Template. More standard templates for other languages like C++ and Java will be
developed and released in future by Phorward Software Technologies, but are not
available for now; Any help and support on this area is appreciated.

UniCC has been developed since 2006 and has its origin at Phorward Software
Technologies and is initially written and maintained by its 1985 born core
developer, Jan Max Meyer. Phorward Software Technologies is a software-company
from Dortmund, Germany, which focuses its business on compiler construction,
scripting languages and software development tools, both in the area of open
source and proprietary solutions.

This document should serve as a quick developer's reference note on how to
compile UniCC and set up its environment. There is also additional
documentation in form of a User's Manual available, which can be obtained
via the Phorward Software Technologies website.

Please check out http://unicc.phorward-software.com/ from time to time to get
the latest news, documentation, updates and support on the UniCC LALR(1) Parser
Generator.

= ENVIRONMENT =
To get UniCC work properly, the **unicc** executable must be in the PATH.
It is also required to set an environment variable UNICC_TPLDIR that directs
to a directory holding the UniCC target language templates.

= COMMAND-LINE OPTIONS =

This command-line interface supports various, combinable options to invoke, modify and specialize the parser generation process, or to trigger further tasks.

-a, --all-warnings
	Runs UniCC to print all warnings that come up with the grammar. UniCC normaly supresses some warning messages that raise up during the parse table constructions according to their importance. 

-b //NAME//, --basename //NAME//
	Defines the specified basename //NAME// to be used for the output file(s) instead of the one derived by the ``#prefix`` directive or by the name of the input filename. This basename is used for all output files if the provided parser template causes the construction of multiple files. 

-G, --grammar
	Dumps an overview of the finally constructred grammar to stderr, right before the parse-tables are generated. 

-h, --help 
	Prints a short overview about the command-line options and exists.

-V, --version
	Prints copyright and version information and exits.

-n, --no-opt
	Disables state optimization; By default, the resulting LALR(1) parse states are optimized during table construction by introducing a special SHIFT_REDUCE action which combines a shift and reduction, which is possible when the last symbol of a production is shifted. Standard LALR(1) parsers only support SHIFT or REDUCE, not both operations at the same time. When this option is used, UniCC produces about 20-30% more LALR(1) states. 

-P, --production
	Dumps an overview about the finally produced productions and their semantic actions. 

-s, --stats
	Prints a statistics message to stderr when parser generation has entirely finished.

-S, --states
	Dumps the generated LALR(1) states that had been generated during the parse table generation process. 

-T, --symbols
	Dumps an overview of all used symbols. 

-v, --verbose
	Prints process messages about the specific tasks during parser generation process. 

-w, --warnings
	Print relevant warnings. 

-x, --xml
	Triggers UniCC to run the parser definition file generator additionally to the program module generator. The parser description file generator generator outputs an XML-based parser representation of the generated parse tables, which can be used by third-party code generators or grammar analsys and debugging tools. 

-X, --XML
	Triggers UniCC to only run the parser definition file generator without running the program-module generator. 


Errors and warnings are printed to STDERR, any other kind of output to STDOUT.

= AUTHOR =

Written and maintained by Jan Max Meyer.

= COPYRIGHT =

Copyright (C) 2006-2011 by Phorward Software Technologies, Jan Max Meyer
		
You may use, modify and distribute this software under the terms and conditions
of the Artistic License, version 2. Please see LICENSE for more information.
